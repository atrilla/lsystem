/**
 * @mainpage L-system
 * 
 * @par General concept
 * Parallel string rewriting system, namely a variant of a formal grammar,
 * most famously used to model the growth processes of plant development.
 *
 * L-systems are a mathematical formalism proposed by the the Hungarian 
 * theoretical biologist and botanist from the University of Utrecht, 
 * Aristid Lindenmayer, in 1968, as a foundation for an axiomatic theory 
 * of biological development. More recently, L-systems have found several 
 * applications in computer graphics including the generation of fractals 
 * and the realistic modelling of plants.
 *
 * The basic idea is to define complex objects by successively replacing 
 * parts of a simple object using a set of rewriting rules or productions.
 * The rewriting can be carried out recursively.
 *
 * The most extensively studied and the best understood rewriting systems 
 * operate on character strings. Chomsky's work on formal grammars spawned
 * a wide interest in rewriting systems. The essential difference between
 * Chomsky grammars and L-systems lies in the method of applying 
 * productions. In Chomsky grammars productions are applied sequentially,
 * whereas in L-systems they are applied in parallel, replacing 
 * simultaneously all letters in a given word. This difference reflects 
 * the biological motivation of L-systems. Productions are intended to 
 * capture cell divisions in multicellular organisms, where many divisions 
 * may occur at the same time.
 *
 * Many fractals (or at least their finite approximations) can be thought 
 * of as sequences of primitive elements/line segments. To produce 
 * fractals, strings generated by L-systems must contain the necessary 
 * information about figure geometry, and self-similarity is one of the 
 * most important properties of fractals. Because of numerous ways 
 * branching can be achieved geometrically, there are several ways of 
 * creating models of plants as well.
 *
 * @image html fractalplant.png "Fractal plant example, cf. the Wikipedia."
 *
 * To give geometric life to a string of characters, a character string 
 * is interpreted as a sequence of drawing instructions using a 
 * scheme that is commonly referred to as "turtle graphics". Otherwise
 * the generated object would be very difficult to describe 
 * by standard Euclidean geometry. The Logo programming language is one
 * example of such turtle graphics system.
 *
 * @par Usage details
 * In order to use the L-system, a parameter indicating the location of
 * the file that defines the objective geometry has to be passed. 
 * Then, the standard output of the
 * program can be redirected into a plain text file, to be then graphically 
 * represented with a Logo interpreter such as
 * <a href="http://www.cs.berkeley.edu/~bh/logo.html">ucblogo</a>:<br/>
 * <br/>./bin/lsystem data/file.def > syst.txt; ucblogo syst.txt
 * 
 * @author Alexandre Trilla (atrilla)
 * @version 0.0.1
 */ 
